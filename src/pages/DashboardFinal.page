<apex:page standardController="Application__c" extensions="ChartsExtension" showHeader="true" sidebar="false">
<apex:includeScript id="a" value="https://www.google.com/jsapi" />
  
  <style>
  #left_section{    
    text-align: center;
    width: 870px;
    display: inline-block;
    position:relative;
    float:left; 
    padding-left: 0px; 
  }
  
  #right_section{ 
    text-align: center;
    width: 310px;
    display: inline-block;
    position:relative;
    float:right; 
    
  }
  
  #middle_section{ 
    text-align: center;
    width: 100%;
    display: block;
    margin: 0 auto;
  }
  
  #bottom_section table{
    text-align: center;
    width: 100%;
    border:1px solid grey;
    border-spacing: 30px;  
  }
  
  #bottom_section th{
    color:#000000;
    background-color:#ffffff;
    text-align: center;
    font-size: 25px;
    height: 4px;
    valign: middle;
    padding-bottom: 20px;  
  }
  
  #bottom_section td{
    display: block;
    width: 100%;
    text-align: center; 
    border:none; 
  }
  
  #day_overview table{
    width: 100%;    
    padding-top: 0px;  
    padding-right: 0px;  
    padding-bottom: 20px;  
    padding-left: 0px;
    border:1px solid grey;
  }
  
  #day_overview th{
    color:#000000;
    background-color:#ffffff;
    text-align: center;
    font-size: 25px;
    height: 4px;
    valign: middle;
  }
  
  #day_overview td{
    text-align: left; 
    border:none;
    padding-left: 30px;
     
  }
  
  #task table{
      
  
  }
  
  #task th{
     font-size:17pt;
  
  }
  
  #today_tasks table{
      width:800px; 
      border:1px solid grey; 
      border-top-style: none;
  }
  
    
  #today_tasks td{
      width:400px;
      height:400px;
      padding-left: 30px;
      padding-bottom: 20px;
      padding-top: 20px;
      border:none;
  }
  
  #chatter table{
    width: 100%;
    height: 656px; 
    border:1px solid grey;   
  }
  
  #chatter th{
    color:#000000;
    background-color:#ffffff;
    text-align:center;
    font-size:25px;
    height:4px;
    valign: middle;
    padding-bottom: 5px;
  }
  
  #chatter td{
    border:none;
  
  }
  
  #hiring_goals table{
     width: 100%;
     height: 400px;
     border:1px solid grey;
     border-top-style: none;
  }
  
  #hiring_goals th{
     width: 100%;
     height: 50px;
     text-align:center;
     valign: middle; 
     font-size: 11pt;
  }
  
  #hiring_goals td{
     text-align:center;
     valign: top;
  }
  
  #gaugechart_div{
     width: 100%;
     text-align:center;   
  }
  
  #pipeline_overview table{
     width:100%;
     height:350px;
     padding-top: 20px;
     border:1px solid grey;
  }  
  
  #pipeline_overview td{
     font-size: 12pt;
     font-family: arial,sans-serif; 
     font-weight: bolder;
     text-align:center; 
  } 
  
  #pipeline_overview th{
     color:#000000;
     background-color:#ffffff;
     text-align:center;
     font-size:22px;
     height:2px;
  }
  
  #candidate_source table{
     width: 100%;
     border:1px solid grey;
     padding-left: 10px;
     padding-top: 20px;
  }
  
  #candidate_source th{
     color:#000000;
     background-color:#ffffff;
     text-align:center;
     font-size:22px;
     height:2px;
  }
  
  #candidate_source td{
     font-size: 12pt;
     font-family: arial,sans-serif; 
     font-weight: bolder;
     text-align:center; 
  } 
    
  #candidate_source div { 
     float: left; 
     width: 300; 
     margin: 4px;
  }
  
  #quarterly_goals table{
     width:100%;
     height:370px;
     padding-top: 10px;
     border:1px solid grey;
  }  
  
  #quarterly_goals td{
     font-size: 12pt;
     font-family: arial,sans-serif; 
     font-weight: bolder;
     text-align:center; 
  } 
  
  #quarterly_goals th{
     color:#000000;
     background-color:#ffffff;
     text-align:center;
     font-size:18px;
     height:2px;
  }
  
  #hiring_sources table{
     width:100%;
     height:370px;
     padding-top: 10px;
     border:1px solid grey;
  }  
  
  #hiring_sources td{
     font-size: 12pt;
     font-family: arial,sans-serif; 
     font-weight: bolder;
     text-align:center; 
  } 
  
  #hiring_sources th{
     color:#000000;
     background-color:#ffffff;
     text-align:center;
     font-size:18px;
     height:2px;
  }
  </style>
  <script type="text/javascript">
  
        function insertAfter( referenceNode, newNode ){
            referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
        }
        
        // Load the Visualization API and the chart package.
        google.load("visualization", "1", {packages:["corechart"]});
        // Set a callback to run when the Google Visualization API is loaded.
        google.setOnLoadCallback(initPipelineOverview);

        function initPipelineOverview() { 
            var data1 = new google.visualization.DataTable();
            var data2 = new google.visualization.DataTable();
            var data3 = new google.visualization.DataTable();
            var data4 = new google.visualization.DataTable();
            var data5 = new google.visualization.DataTable();

            // load Column chart
            var chart = new google.visualization.ColumnChart(document.getElementById('applicationstatuschart_div'));
                           
            ChartsExtension.loadNewStatus(
                function(result, event){ 
                                    
                    // Prepare table model for chart with columns
                    
                    data1.addColumn('string', 'Position');
                    data1.addColumn('number', 'New');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data1.addRow([r.position, r.newNum]);
                    }                                                                                                     
            }, {escape:true});  
        
            ChartsExtension.loadPhoneScreenStatus(
                function(result, event){ 
                                   
                    // Prepare table model for chart with columns
                    
                    data2.addColumn('string', 'Position');
                    data2.addColumn('number', 'Phone Screen');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data2.addRow([r.position, r.phoneNum]);
                    }
             }, {escape:true}); 
                
             ChartsExtension.loadOnsiteStatus(
                function(result, event){ 
                                   
                    // Prepare table model for chart with columns
                    
                    data3.addColumn('string', 'Position');
                    data3.addColumn('number', 'Onsite');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data3.addRow([r.position, r.onsiteNum]);
                    }
             }, {escape:true});
             
             ChartsExtension.loadOfferInProgressStatus(
                function(result, event){ 
                                   
                    // Prepare table model for chart with columns
                    
                    data4.addColumn('string', 'Position');
                    data4.addColumn('number', 'Offer In Progress');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data4.addRow([r.position, r.offerInProgressNum]);
                    }
             }, {escape:true});
             
             ChartsExtension.loadOfferAcceptedStatus(
                function(result, event){ 
                                   
                    // Prepare table model for chart with columns
                    
                    data5.addColumn('string', 'Position');
                    data5.addColumn('number', 'Offer Accepted');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data5.addRow([r.position, r.offerAcceptedNum]);
                    }
                    
                    var joined_dt1 = google.visualization.data.join(data1, data2, 'full', [[0,0]], [1], [1]);
                    var joined_dt2 = google.visualization.data.join(joined_dt1, data3, 'full', [[0,0]], [1,2], [1]);
                    var joined_dt3 = google.visualization.data.join(joined_dt2, data4, 'full', [[0,0]], [1,2,3], [1]);
                    var joined_dt4 = google.visualization.data.join(joined_dt3, data5, 'full', [[0,0]], [1,2,3,4], [1]);
                                         
                    chart.draw(joined_dt4, {'isStacked': true,
                                'legend':{position: 'top', textStyle: {fontSize: 12}},
                                'colors': ['#FA9D5A', '#FAFA07', '#48FA07', '#5CD3F7','#FA0202'],
                                'hAxis': {}}); 
            
            }, {escape:true});                                           
        }   
      
      // Draw chart: My Closed Requisitions vs My Target Goals
      google.load('visualization', '1', {packages:['gauge']});
      google.setOnLoadCallback(initGaugeChart);
      function initGaugeChart() {
          var data = new google.visualization.DataTable();
          var target = 0;
          var actual = 0;
          ChartsExtension.loadGoalActualGauge(
                function(result, event){                                           
                    // add the value of completed goals from the remoting result
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];                       
                        actual = r.actual;
                    }                                                                                                                                           
          }, {escape:true}); 
                
          ChartsExtension.loadGoalTargetGauge(
                function(result, event){                                       
                    // add the value of target goals from the remoting result
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];                       
                        target = r.target;
                    }                                                                                                                                          
                                
                data.addColumn('number', 'value'); 
                data.addRow([actual]);
                var options = {width: 210, height: 210,                             
                               minorTicks: 5, max: target,
                               redFrom: 0, redTo: actual
                              };

                var chart = new google.visualization.Gauge(document.getElementById('gaugechart_div'));
                chart.draw(data, options); 
                
          }, {escape:true});          
        }
     
         // Draw charts: candidate sources for my requisitions.
        google.load("visualization", "1", {packages:["corechart"]});
        google.setOnLoadCallback(initCandidateSourcesChart);

        function initCandidateSourcesChart() {
        
            ChartsExtension.loadPositions(            
                function(pos_result, event){
                    var div1 = document.getElementById('sourcechart0_div'); 
                                                      
                    for(var i = 0; i < pos_result.length; i++){                         
                        var position = pos_result[i];
                        
                        ChartsExtension.loadCandidateSources(position,
                            function(source_result, event){                                                                
                               
                                // Prepare table model for chart with columns
                                var data = new google.visualization.DataTable();
                                var positionTitle;
                                data.addColumn('string', 'Source');
                                data.addColumn('number', 'Number of Applications'); 
                                  
                                // add rows from the remoting results
                                for(var i = 0; i < source_result.length; i++){
                                    var r = source_result[i];
                                    if(r.Source__c == null && r.SourceNum != null){
                                        data.addRow(["Other", r.SourceNum]);
                                    }else{
                                        data.addRow([r.Source__c, r.SourceNum]);
                                        positionTitle = r.pos;
                                    }
                                }
                                                             
                                // all done, lets draw the chart with some options to make it look nice.                                
                                var options = {width: 350, height: 300, pieSliceText: 'value', chartArea:{left:70,top:30,width:"80%",height:"80%"}, title: positionTitle, titleTextStyle:{fontSize: 13},  colors:['#FA9D5A', '#FAFA07', '#48FA07', '#5CD3F7','#BA11F7']};
                                var chart = new google.visualization.PieChart(div1);
                                chart.draw(data,options); 
                                         
                                var newdiv = document.createElement('div');
                                newdiv.style.width = 400;  
                                newdiv.style.height = 300;
                                newdiv.style.float = "left";  
                                newdiv.style.overflow = "auto";                               
                                var divIdName = 'sourcechart'+ i +'_div';
                                newdiv.setAttribute('id', divIdName);                                                  
                                insertAfter(div1, newdiv);
                                div1 = div1.nextSibling;
                                //div1 = newdiv;                                                   
                       
                       }, {escape:true});                                                                                      
                    }                                
                  }, {escape:true});                                                                                          
        }
        
        // Draw chart: Team Quarterly Goals.      
        google.load("visualization", "1", {packages:["corechart"]});
        google.setOnLoadCallback(initTeamQuarterlyGoals);

        function initTeamQuarterlyGoals() { 
            var data1 = new google.visualization.DataTable();
            var data2 = new google.visualization.DataTable();

            // load Column chart
            var chart = new google.visualization.ColumnChart(document.getElementById('quarterly_goals_div'));
                           
            ChartsExtension.loadTeamQuarterlyGoalActual(
                function(result, event){ 
                                    
                    // Prepare table model for chart with columns
                    
                    data1.addColumn('string', 'Position');
                    data1.addColumn('number', 'Actual');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data1.addRow([r.position, r.actual]);
                    }                                                                                                     
            }, {escape:true});  
        
            ChartsExtension.loadTeamQuarterlyGoalTarget(
                function(result, event){ 
                                   
                    // Prepare table model for chart with columns
                    
                    data2.addColumn('string', 'Position');
                    data2.addColumn('number', 'Target');   
                    // add rows from the remoting results
                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        data2.addRow([r.position, r.target]);
                    }
                    
                    var joined_dt1 = google.visualization.data.join(data1, data2, 'full', [[0,0]], [1], [1]);
                                         
                    chart.draw(joined_dt1, {'isStacked': true,
                                'legend':{position: 'top', textStyle: {fontSize: 12}},
                                'colors': ['#22F082', '#FF000D'],
                                'hAxis': {}}); 
             }, {escape:true});                                        
        }
        
        // Draw chart:Team Quarterly Hiring Sources.
        google.load("visualization", "1", {packages:["corechart"]});
        google.setOnLoadCallback(initTeamQuarterlyCandidateSourcesChart);

        function initTeamQuarterlyCandidateSourcesChart() {
        
            ChartsExtension.loadTeamQuarterlyHireSources(            
                function(result, event){
                    var data = new google.visualization.DataTable(); 
                    data.addColumn('string', 'Source');
                    data.addColumn('number', 'Number of Applications'); 

                    for(var i = 0; i < result.length; i++){
                        var r = result[i];
                        if(r.source == null && r.sourceNum != null){
                            data.addRow(["Other", r.sourceNum]);
                        }else{
                            data.addRow([r.source, r.sourceNum]);
                        }
                     }
                                                             
                     // all done, lets draw the chart with some options to make it look nice.                                
                     var options = {pieSliceText: 'value', chartArea:{left:20,top:20,width:"100%",height:"100%"}, colors:['#FA9D5A', '#FAFA07', '#48FA07', '#5CD3F7','#BA11F7']};
                     var chart = new google.visualization.PieChart(document.getElementById('hiring_sources_div'));
                     chart.draw(data,options);                                                   
                  }, {escape:true});                                                                                          
        }   
    
    </script>
    
    <div id="left_section">
        <div id="day_overview">
            <table>
                <tr>
                    <th colspan="2">Day Overview</th>
                </tr>
                <tr>
                    <td>
                        <span style="font-size:17pt;"> My Tasks</span> 
                        <apex:iframe src="/apex/DashboardTaskList?core.apexpages.devmode.url=1" frameborder="0" height="140"></apex:iframe>                           
                    </td>
                    <td>
                        <span style="font-size:17pt;">Red Zone</span>                           
                        <apex:iframe src="/apex/DashboardRedZone?core.apexpages.devmode.url=1" frameborder="0" height="140"></apex:iframe>                          
                    </td>
                    
                </tr>
            </table>
        </div>
        <div id="today_tasks">
            <table>
                <tr>
                    <td>
                        <apex:iframe src="/apex/DashboardTodayPhoneScreens?core.apexpages.devmode.url=1" frameborder="0" height="400" width="400"></apex:iframe>
                    </td>
                    <td>
                        <apex:iframe src="/apex/DashboardTodayOnsites?core.apexpages.devmode.url=1" frameborder="0" height="400" width="400"></apex:iframe>
                    </td>                 
                </tr>
                <tr>
                    <td>
                        <apex:iframe src="/apex/DashboardFlaggedCandidates?core.apexpages.devmode.url=1" frameborder="0" height="400" width="400"></apex:iframe> 
                    </td>
                    <td>
                        <apex:iframe src="/apex/DashboardPendingCandidates?core.apexpages.devmode.url=1" frameborder="0" height="400" width="400"></apex:iframe>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div id="right_section">
        <div id="chatter">
            <table>
                <tr>
                    <th>Chatter</th>
                </tr>
                <tr>
                    <td rowspan="2"> <c:ChatterFeed ></c:ChatterFeed> </td>
                </tr>
            </table>
        </div>
        <div id="hiring_goals">
            <table>
                <tr>
                    <th>Closed Requisitions vs Target Goals</th>
                </tr>
                <tr>
                    <td> <div id="gaugechart_div"/></td>
                </tr>
            </table>
        </div>    
    </div>
    <div id="middle_section">
        <div id="pipeline_overview">       
            <table>
                <tr>
                    <th>Pipeline Overview </th>
                </tr>
                <tr>
                    <td>My Requisitions </td>
                </tr>
                <tr>
                    <td>
                        <div id="applicationstatuschart_div"/>
                    </td>
                </tr>
             </table>
         </div>
         <div id="candidate_source">
             <table>
                 <tr>
                     <th  colspan="3">Candidate Sources<br/> </th>
                 </tr>
                 <tr>
                    <td>My Requisitions </td>
                 </tr>            
                 <tr>
                     <td>
                         <div id="sourcechart0_div"/>
                     </td>
                 </tr>
              </table>
          </div>
    </div>
    <div id="bottom_section">
        <table>
                 <tr>
                     <th  colspan="2">Team Quarterly Hiring<br/> </th>
                 </tr>
                  <tr>
                     <td>
                         <div id="quarterly_goals">
                             <table>
                                 <tr>
                                     <th>Quarterly Goals</th>
                                 </tr>
                                 <tr>
                                     <td><div id="quarterly_goals_div"/></td>
                                 </tr>
                             </table>
                          </div>
                     </td>
                  </tr>
                  <tr>
                     <td>
                         <div id="hiring_sources">
                             <table>
                                 <tr>
                                     <th>Hires by Source</th>
                                 </tr>
                                 <tr>
                                     <td><div id="hiring_sources_div"/></td>                                    
                                 </tr>
                             </table>
                          </div>
                     </td>
                   </tr>
                   <tr>
                     <td>                         
                         <apex:iframe src="/apex/DashboardTeamQuarterlyHiresList?core.apexpages.devmode.url=1" frameborder="0" height="400"></apex:iframe> 
                     </td>
                   </tr>
              </table>
    
    
    
    </div>
</apex:page>